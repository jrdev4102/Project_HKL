<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:s="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<s:http auto-config="true" use-expressions="true">
	
	
		<!-- ########################################################### 권한 ########################################################### -->
	
		<!-- 정적 리소스는 모두 접근 허용 -->
		<s:intercept-url pattern="/resources/**" access="permitAll" />
		
		<!-- 메인화면은 모두 접근 허용 -->
		<s:intercept-url pattern="/" access="permitAll" />
		
		<!-- 로그인된 상태에서는 로그인이나 회원가입 화면에 접근 못하도록 함 -->
		<s:intercept-url pattern="/member/loginPage" access="isAnonymous()" />
		
		<!-- 관리자권한 테스트용 소스 -->
		<s:intercept-url pattern="/test" access="hasRole('ROLE_ADMIN')" />
	
		<!-- 권한 예외 발생시 403 에러페이지로 리다이렉트 -->
		<s:access-denied-handler error-page="/access/403" />
		
		
		
		<!-- ########################################################### 설정 ########################################################### -->
		
		<!-- csrf 토큰 사용 -->
		<s:csrf disabled="false"/>	
	
		<!-- 중복 로그인 방지 | 중복가능한 최대 세션 수 1 | 중복로그인시 /login 으로 리다이렉트 -->	
		<s:session-management invalid-session-url="/">
        	<s:concurrency-control max-sessions="1" expired-url="/"/>
   	 	</s:session-management>
   	 	
   	 	<!-- 로그인 처리 -->
		<s:form-login 
			username-parameter="memberId"
			password-parameter="memberPw"
			login-processing-url="/login"
			login-page="/member/loginPage"
		/>
		
		<!-- 로그아웃 처리 -->
		<s:logout 
			logout-url="/logout"
			logout-success-url="/"
			invalidate-session="true"
			delete-cookies="JSESSIONID"
		/>
		
	</s:http>

	<s:authentication-manager>
		<s:authentication-provider user-service-ref="">

			<s:user-service>

				<s:user name="member" password="{noop}member" authorities="ROLE_MEMBER" />
				
				<s:user name="admin" password="{noop}root" authorities="ROLE_ADMIN" />
				
			</s:user-service>

		</s:authentication-provider>
	</s:authentication-manager>

</beans>
